version: "3.9"
services:
  rosys:
    image: "zauberzeug/field-friend:latest"
    build:
      context: .
    volumes:
      - ./:/app
      - ../lizard:/home/zauberzeug/.lizard
      - ~/.rosys:/home/zauberzeug/.rosys
      - ~/data:/data
      - /run/udev:/run/udev:ro # to get the device identifiers
    network_mode: host
    restart: always
    privileged: true
    environment:
      - ROBOT_ID=Field Friend
      - TZ=Europe/Amsterdam
    hostname: docker
    cap_add:
      - SYS_NICE # allow container to set process priorities
      - SYS_PTRACE # allow profiling with py-spy
      - NET_BIND_SERVICE # allow container to bind to privileged ports
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "100"
    init: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 60s
      timeout: 20s
      retries: 3
      start_period: 60s

  detector:
    image: "zauberzeug/yolov5-detector:35.4.1"
    restart: always
    ports:
      - "8004:80"
    hostname: ${ROBOT_ID}
    environment:
      - HOST=learning-loop.ai
      - ORGANIZATION=zauberzeug
      - PROJECT=coins
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ~/data_coins:/data

  circle_sight:
    image: "zauberzeug/yolov5-detector:35.4.1"
    restart: always
    ports:
      - "8005:80"
    hostname: ${ROBOT_ID}
    environment:
      - HOST=learning-loop.ai
      - ORGANIZATION=zauberzeug
      - PROJECT=monitoring
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ~/data_monitoring:/data

  autoheal: # restart containers which turn unhealthy
    image: willfarrell/autoheal
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
